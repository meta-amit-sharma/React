function Button(props) { //props are used to pass values
  const handleClick = () => props.onClickFunction(props.value); //to define function call to variavle
  //onClick in Button accepets only function reference, no calls
  return (<button onClick={handleClick}> 
      +{props.value}
    </button>);
}

function Display(props){
  return (
    <div>{props.counter}</div>
  );
}

//data flow is allowed onlny from paternt to children, and in no other way
function App(){ //this serves as parent for its enclosing elements
  const [counter, setCounter] = useState(10);
  const onClickFunction = (value) => setCounter(counter+value);
  //this empty <> stands for React.fragments, we can also use div or any other element to enclose 
  return(
    <>
      <Button onClickFunction = {onClickFunction} value={1}/>
      <Button onClickFunction = {onClickFunction} value={10}/>
      <Button onClickFunction = {onClickFunction} value={20}/>
      <Display counter={counter}/>
    </>
  );
}

ReactDOM.render(
  <App / >,
  document.getElementById('mountNode'),
);
